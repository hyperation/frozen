{
	name   => "be_file_dat",
	chains => {
		{ name='file', filename='data_real_store_dat_string.dat' }
	}
},
{
	name   => "be_file",
	chains => {
		{ name => "insert-sort", engine => "binsearch" },
		{ name => "list"                               },
		{
			name   => "rewrite",
			script => "
				request_t rq_data;
				
				if(!data_cmp(request['action'], read)){
				   data_arith((string)'*', request['key'], (off_t)'8');
												
				   rq_data['buffer'] = request['buffer'];
												
				   request['buffer'] = data_alloca((string)'off_t', (size_t)'8');
				   pass(request);
												
				   rq_data['action'] = read;
				   rq_data['key']    = request['buffer'];
				   ret = backend((string)'be_file_dat', rq_data);
				};
				
				if(!data_cmp(request['action'], write)){
				   rq_data['action']  = write;
				   rq_data['buffer']  = request['buffer'];
				   rq_data['key_out'] = data_alloca((string)'memory', (size_t)'8');
				   ret = backend((string)'be_file_dat', rq_data);
												
				   request['buffer'] = rq_data['key_out'];
				   data_arith((string)'*', request['key'], (off_t)'8');
				   pass(request);
				   data_arith((string)'/', request['key_out'], (off_t)'8');
				};
				
				if(!data_cmp(request['action'], delete)){
				   data_arith((string)'*', request['key'], (off_t)'8');
				   ret = pass(request);
				};
				
				if(!data_cmp(request['action'], move)){
				   data_arith((string)'*', request['key_to'],   (off_t)'8');
				   data_arith((string)'*', request['key_from'], (off_t)'8');
				   ret = pass(request);
				};
				
				if(!data_cmp(request['action'], count)){
				   ret = pass(request);
				   data_arith((string)'/', request['buffer'], (off_t)'8');
				};
			"
		},
		{ name => "file", filename => "data_real_store_idx_string.dat" }
	}
}
