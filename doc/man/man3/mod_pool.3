.TH "Backend 'backend/pool'" 3 "Tue Nov 8 2011" "Version 1.0" "frozen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Backend 'backend/pool' \- Pool module inserted in forkable backend chain can track any property of backend (like memory usage) and limit it. Underlying modules can be destroyed or call special function. Configuration
Accepted configuration: 
.PP
.nf
   {
                class             = 'pool',
                parameter         =                    # Step 1: how <parameter> value will be obtained:
                                    'ticks',           #  - <parameter> is ticks collected in last <ticks_interval> seconds, default
                                    'request',         #  - send <parameter_request> + HK(buffer) -> (uint_t).
                                    'one',             #  - <parameter> == 1 if pool not killed

                                                     # Step 2: limit
              max_perinstance   = (uint_t)'1000',    # set maximum <parameter> value for one instance to 1000
              max_perfork       = (uint_t)'2000',    # set maximum <parameter> value for group of forked backends to 2000
              max_global        = (uint_t)'3000',    # set maximum <parameter> value for all backends (can be different for each instance)

              mode_perfork      =                    # Step 3: choose victum
                                  'first',           #   - earliest registered backend, default
                                  'last',            #   - latest registered backend
                                  'random',          #   - random item
                                  'highest',         #   - backend with higest <parameter> value
                                  'lowest',          #   - backend with lowest <parameter> value
              mode_global       ... same as _perfork #
                                                     
                                                     # Step 4: what to do with victum?
              action            =                    # what to do with choosed module:
                                  'request'          #   - send request <action_request_one>, default
              action_one        ... same as action   # override for _one action
              action_perfork    ... same as action   # override for _perfork action
              action_global     ... same as action   # override for _global action
              
              parameter_request      = { ... }       #
              action_request         = { ... }       # this is default action
              action_request_one     = { ... }       # override for _one limits
              action_request_perfork = { ... }       # override for _perfork limits
              action_request_global  = { ... }       # override for _global limits
              
              pool_interval     = (uint_t)'5'        # see below. This parameter is global,
                                                       newly created backends overwrite it
              tick_interval     = (uint_t)'5'        # see below.
        }

 Limit behavior:
   - Limit checked ones per <pool_interval> (default 5 seconds). Between two checks backends can overconsume limit, but this method
     will have less performance loss.
   - Ticks collected in <tick_interval> period. One tick is one passed request.

.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for frozen from the source code.
