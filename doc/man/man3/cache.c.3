.TH "cache.c" 3 "Sat Oct 29 2011" "Version 1.0" "frozen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cache.c \- 
.PP
Cache module.  

.SH SYNOPSIS
.br
.PP
\fC#include <libfrozen.h>\fP
.br
\fC#include <backend.h>\fP
.br
\fC#include <pthread.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBcache_userdata\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBEMODULE\fP   3"
.br
.ti -1c
.RI "#define \fBCACHE_PAGE_SIZE\fP   0x1000"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBcache_userdata\fP \fBcache_userdata\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBbackend_t\fP \fBcache_proto\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Cache module. 

Cache module hold data in memory, instead of underlying backend 
.SH "Variable Documentation"
.PP 
.SS "\fBbackend_t\fP cache_proto"\fBInitial value:\fP
.PP
.nf
 {
        .class          = 'cache/cache',
        .supported_api  = API_CRWD,
        .func_init      = &cache_init,
        .func_configure = &cache_configure,
        .func_destroy   = &cache_destroy,
        {
                .func_create      = NULL,
                .func_get         = NULL,
                .func_set         = NULL,
                .func_delete      = NULL,
                .func_count       = NULL
        }
}
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for frozen from the source code.
