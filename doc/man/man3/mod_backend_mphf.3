.TH "Backend 'index/mphf'" 3 "Tue Nov 8 2011" "Version 1.0" "frozen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Backend 'index/mphf' \- Description
Minimal Perfect Hash Function. This module can be used to create perfect hash tables for given set. As drawback - table in most cases need to be rebuilded frequently. Can be used in enviroment critical to space and execution time. Also, reads are more preferable than writes (actually, not write, but new item creation). 
.SS "Configuration"
Accepted configuration: 
.PP
.nf
 {
              class                   = 'index/mphf',
              type                    = <see algo>,          # algorithm to use in index
              input                   = (hashkey_t)'key',    # input key for index
              output                  = (hashkey_t)'offset', # output key name for index
              <algo specific parameters>
 }

.fi
.PP
.PP
Algorithms avaliable: 
.PD 0

.IP "\(bu" 2
chm_imp - rewritten from scratch CHM algorithm described in 'An optimal algorithm for generating minimal perfect hash functions.', Z.J. Czech, G. Havas, and B.S. Majewski. http://cmph.sourceforge.net/papers/chm92.pdf 
.PP

.SS "CHM algorithm configuration parameters"
Accepted configuration: 
.PP
.nf
 {
              nelements_min           = (uint_t)'1000',    # starting index size, default 256
              nelements_step          = (uint_t)'500',     # index expanding step size, default 256
              nelements_mul           = (uint_t)'2',       # index expanding multiply coefficient, default 1
              value_bits              = (uint_t)'32',      # value size in bits
              readonly                = (uint_t)'0',       # index in read-only mode
              backend_g               = (backend_t)'name', # backend for storing g-array
              backend_v               = (backend_t)'name', # backend for storing v-array
              backend_e               = (backend_t)'name'  # backend for storing e-array
 }

.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for frozen from the source code.
